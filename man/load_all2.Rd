% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_load.R
\name{load_all2}
\alias{load_all2}
\title{Load complete package without copying .dll file}
\usage{
load_all2(
  path = ".",
  reset = TRUE,
  recompile = FALSE,
  export_all = TRUE,
  helpers = TRUE,
  quiet = FALSE,
  ...
)
}
\arguments{
\item{path}{see `?pkgload::load_all()`}

\item{reset}{see `?pkgload::load_all()`}

\item{recompile}{see `?pkgload::load_all()`}

\item{export_all}{see `?pkgload::load_all()`}

\item{helpers}{see `?pkgload::load_all()`}

\item{quiet}{see `?pkgload::load_all()`}

\item{...}{see `?pkgload::load_all()`}
}
\description{
`vmisc::load_all2()` loads in compiled C++ code without making a copy of the `pkgname.dll` file, but sometimes have problems adding the newly recompiled C++ functions to the R interface; it should be used by default. `pkgload::load_all()` is more error free, but should be used strictly for development mode because the backend `foreach() %dopar% {}`of `vmisc::pb_par_lapply()` causes the `pkgname.dll` file to be copied across multiple temporary directories. When the `pkgname.dll` file is large, the disk space is used up very quickly and can cause memory overflow.
}
